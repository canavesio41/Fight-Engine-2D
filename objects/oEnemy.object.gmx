<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_idle</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//animation 
animation_init();

//states
currentState = 0;

//movement
gSpeed = 0.25;
onGround = false;
xCounter = 0;
yCounter = 0;

xSpeed = 0;
ySpeed = 0;

aSpeed = 0.2;
dSpeed = 0.5;
mSpeed = 2;

jPower = -4;

airAccel = 0.1;
groundAccel = 0.2;
airDecel = 0;
groundDecel = 0.5;
move = 0;
landed = true;

hit = false;

//hurtbox
hurtbox = hurtbox_create(18,24,-9,-24);

hitStun = 0;
hitBy = -1;

max_hp = 100;
cur_hp = max_hp;
last_damage = 0 ;
last_damage_timer = 0 ;
lifebar_height = global.lifebar_height;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>xPos = x;
yPos = y;

animation_control_enemy();

//animation
frame_reset();

//hurtbox
with(hurtbox)
{
    x = other.x + xOffset;
    y = other.y + yOffset;
}

//get hit
if(hit)
{
    squash_stretch(1.3,1.3);
    xSpeed  = hitBy.xHit;
    hitStun = hitBy.hitStun;
    facing  = hitBy.owner.facing * -1;
    last_damage +=5 ;
    last_damage_timer +=5 ;
    cur_hp -= 5;
    hit     = false;
    currentState = states.hit;
    // esto aumenta el timer de combos. (Hollow)
    global.comboCounter++;
    global.comboCounterTimer = global.totalComboTimer;
}

if (cur_hp &gt;= 0)
{
   currentState = states.dead;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///collision
var h, v;

// Handle sub-pixel movement
xCounter += xSpeed;
yCounter += ySpeed;
h = round(xCounter);
v = round(yCounter);
xCounter -= h;
yCounter -= v;




repeat(abs(v)){
    if(ySpeed &lt;= 0){
        if(place_meeting(x,y+sign(v),oBlocker)){
            ySpeed = 0;
            break;
        }else{
            y += sign(v);
        }
    }else if (check_below()){
        ySpeed = 0;
        break;
    }else{
        y += sign(v);
    }
}

repeat(abs(h))
{
    if(place_meeting(x+sign(h),y,oBlocker))
    {
            xSpeed = 0;
        break;
    }
    else
    {
        x += sign(h);
    }
}

///pushing entity

if(keyboard_check(vk_right) &amp;&amp; place_free(x+2,y) &amp;&amp; place_meeting(x-1, y, oPlayer))
{
    x+=2;
}

if(keyboard_check(vk_left) &amp;&amp; place_free(x-2,y) &amp;&amp; place_meeting(x+1, y, oPlayer))
{
    x-=2;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>onGround = check_below();

if(onGround){
    ySpeed = 0;
}else{
    ySpeed += gSpeed;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//animation
frame += frameSpeed;

//state switch
switch currentState {
    case states.hit:
        hit_state();
    break;
     case states.dead:
        dead_state();
    break;
}



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw sprite
draw_sprite_ext( sprite, frame, xPos, yPos, xScale * facing, yScale, angle, color, alpha );

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
